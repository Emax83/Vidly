@model Vidly.ViewModels.CustomerViewModel


@{
    ViewBag.Title = "Edit Customer";
}



@using (Html.BeginForm("Edit", "Customers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


<div class="form-horizontal">

    @Html.ValidationSummary(true, "Please fix errors", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.Customer.Id)


    <div id="dragDropPanel" style="border:2px dotted #ccc; height:100px; width:100px; background-color:#e6e6e6; text-align:center" draggable="true"
         ondrop="drop(event)" ondragover="allowDrop(event)" ondragstart="drag(event)"
         >
        <p style="width:50%; margin:auto; ">
            <i class="fa fa-camera" ></i>
            Drag drop here
        </p>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Customer.Thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="img-item" style="background-image:url('');width:80px;" onclick="document.getElementById('upload_thumb').click();">
                <img id="imgThumb" src="@Url.Content("~/Images/Customers/" + Model.Customer.Thumbnail)" alt="Thumbnail" title="Thumbnail" class="img-thumbnail" />
            </div>
            @Html.TextBoxFor(m => m.Thumbnail, new { type = "file", name="Thumbnail", id="upload_thumb", hidden = "hidden", accept = "image/jpeg, image/png", @class = "form-control", onchange = "PreviewImage(this,'imgThumb')" })

            @Html.ValidationMessageFor(model => model.Customer.Thumbnail, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Customer.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Customer.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Customer.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Customer.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Customer.BirthDate, "{0:d}", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Customer.BirthDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Customer.MembershipTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "id", "Name"), "Select membershiptype", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Customer.MembershipTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="checkbox">
            <label>
                @Html.CheckBoxFor(model => model.Customer.IsSubscribedToNewsletter) Suscribe to newsletter?
            </label>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>

</div>
    }

    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
        @if (Model.Customer != null && Model.Customer.Id > 0)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @using (Html.BeginForm("Delete", "Customers", new { id = Model.Customer.Id }, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken();
                        @Html.HiddenFor(model => model.Customer.Id)
                        <input type="submit" value="Delete" class="btn btn-danger" onclick="return confirm('Are you sure?')" />
                    }
                </div>
            </div>
        }

    </div>
@section scripts{ 
    <script>
        function PreviewImage(input, destId) {
            var i;
            for (i = 0; i < input.files.length; i++) {
                var file = input.files[i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    var img = document.getElementById(destId);
                    img.src = e.target.result;
                    img.alt = file.name;
                    //var item = "<div class='img-item' data-img-name='" + file.name + "' ><img class='' title='" + file.name + "' alt='" + file.name + "' src='" + e.target.result + "' /><div class='close'><span onclick='RemoveImage(event,this)' >&times;</span></div></div>";
                    //$('#divCarousel').append(item);
                };
                if (file) {
                    reader.readAsDataURL(file);
                }
            }
        }


        function allowDrop(ev) {
            ev.preventDefault();
        }

        function drag(ev) {
            ev.dataTransfer.setData("text", ev.target.id);
        }

        function drop(ev) {
            ev.preventDefault();
            debugger;
            var input = document.getElementById('upload_thumb');
            input.files = ev.dataTransfer.files;//.getData("text");
            var i;
            for (i = 0; i < input.files.length; i++) {
                var formData = new FormData();
                formData.append(input.files[i].name, input.files[i]);
            }
            //ev.target.appendChild(document.getElementById(data));
        }

    </script>
}
